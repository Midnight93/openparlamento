= deppPropelActAsMonitorableBehaviorPlugin =

[[PageOutline(2-6, Table of contents)]]

This plugin is a Propel Behavior that makes any Propel object monitorable by users.
Monitor here doesn't really means anything more than a general marking. 
A user states his interest in an object. A record is inserted in a table and that's all.

A user is usually added the [wiki:deppPropelActAsMonitorerBehaviorPlugin actAsMonitorer] behavior, 
in order to ease the handling and counting of objects monitored by the user.

== Installation ==


To install the plugin, run this command within your symfony project :

{{{
symfony plugin-install http://symfony-plugins.depp.it/deppPropelActAsMonitorableBehaviorPlugin
}}}

The source code is also available:
 * TODO
   [http://?????????/deppPropelActAsMonitorableBehaviorPlugin/ from the SVN repository] 
   (please always use a tagged version in production)
   

== Configuration ==

To activate this Propel behavior in Symfony, you must first activate behaviors 
in your propel.ini file :

{{{
propel.builder.addBehaviors = true
}}}

In one (or more) of your existing model object classes, apply the behavior. Eg. 
for an {{{Article}}} Propel model class:

{{{
#!php
<?php
class Article extends BaseArticle
{
}
sfPropelBehavior::add('Article', array('deppPropelActAsMonitorableBehavior'));
}}}

You can fine-tune behavior with optional parameters, see the 
[#Behavioroptionalparameters advanced configuration section].

Once your model configured, you have to rebuild it:

{{{
symfony propel-build-all
}}}

And clear the cache :

{{{
symfony cc
}}}

== Advanced configuration ==

=== Behavior optional parameters ===

{{{
#!php
<?php
class Article extends BaseArticle
{
}
sfPropelBehavior::add(
  'Article', 
  array('deppPropelActAsMonitorableBehavior' =>
        array('count_monitoring_users_field'  => 'NMonitoringUsers',     // refers to ArticlePeer::N_MONITORING_USERS
              'reference_field'               => 'Reference',            // refers to ArticlePeer::REFERENCE
       )));
}}}

 * The {{{count_monitoring_users_field}}} parameter, which refer to an {{{unsigned integer}}} 
   column in phpName format of your object table, will store cached 
   value of the actual number of users monitoring the object. 
   Useful for queries performances.
 * The {{{reference_field}}} parameter sets the name of the field where you 
   store the identifier of the object to rate. By default, the plugin will use
   the primary key of the object. You must return an integer fo referencing a
   custom identifier.

== API  ==

Note: In below examples, {{{$user_id}}} is a string representing a 
unique reference to a user, eg. if you're using the sfGuardPlugin, 
{{{sfContext::getInstance()->getUser()->getGuardUser()->getId()}}}.

If you don't provide this parameter, the methods in the plugin API will raise
exceptions of type deppPropelActAsMonitorableException.

So, it's up to the application using the plugin, to correctly set the user_id value.

{{{ 
#!php
<?php
 $article->addMonitoring($user_id)                    // void    - set the monitoring of the article by the user
 $article->removeMonitoring($user_id)                 // object  - remove the monitoring of the article by the user
 $article->isMonitoredByUser($user_id)                // boolean - if the article is monitored by the user
 $article->getMonitoringUsers()                       // array   - list of users (id) monitoring the article
 $article->countMonitoringUsers()                     // int     - number of users monitoring the article
}}}


== Unit testing ==

The plugin is provided with a test suite located in the {{{./test}}} directory. 
To run the tests, type this line from the root of your project :

{{{
$ php plugins/deppPropelActAsMonitorableBehaviorPlugin/test/unit/deppPropelActAsMonitorableBehaviorTest.php
}}}

Note that you have to provide a Propel test object class name to run the test in the test file:

{{{
define('TEST_CLASS', 'sfTestMonitorable');
}}}

== Uninstallation ==

{{{
symfony plugin-uninstall symfony/deppPropelActAsMonitorableBehaviorPlugin
}}}

You will need to remove the behavior to all your model, then rebuild your model
and purge your cache.

== TODO ==

 * Add common tests with the [wiki:deppPropelActAsMonitorerBehaviorPlugin actAsMonitorer] plugin
 
== Changelog ==

=== 2008-10-28 | v0.2 ===
 * Splitting of the functions to count the number of objects monitored by users into the
   [wiki:deppPropelActAsMonitorerBehaviorPlugin actAsMonitorer] plugin.

=== 2008-10-24 | v0.1 ===

 * First version from the sfPropelActAsMonitorableBehaviorPlugin


== Maintener ==

This plugin is maintened by Guglielmo Celata
({{{guglielmo.celata}}} -> {{{gmail.com}}})

Feel free to send features requests, enhancement suggestions or ideally a patch.
